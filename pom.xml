<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ryanluu.todolist</groupId>
  <artifactId>todolist</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>todolist Maven Webapp</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.version>1.8</jdk.version>
    <!-- <spring.version>4.1.1.RELEASE</spring.version> -->
    <jstl.version>1.2</jstl.version>
    <junit.version>4.11</junit.version>
    <logback.version>1.0.13</logback.version>
    <!--  <jcl-over-slf4j.version>1.7.5</jcl-over-slf4j.version> -->
    <tomee.version>1.7.1</tomee.version>
    <twitter.bootstrap.version>3.2.0</twitter.bootstrap.version>
    <jquery.version>2.1.1</jquery.version>
    <hibernate.core.version>4.3.8.Final</hibernate.core.version>
    <hibernate.entitymanager.version>4.3.8.Final</hibernate.entitymanager.version>
    <hibernate.validator.version>5.1.3.Final</hibernate.validator.version>
    <postgresql.version>9.3-1102-jdbc41</postgresql.version>
    <struts2.version>2.3.35</struts2.version>
  </properties>
  

  <dependencies>

    <!-- Apache Struts 2 -->
    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-core</artifactId>
      <version>${struts2.version}</version>
    </dependency>


    <!-- JUnit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Logback -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    
    <!-- Hibernate ORM. -->
    <!--
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate.core.version}</version>
    </dependency>
    -->
    
    <!-- Hibernate Validator. -->
    <!-- rluu_20150201: Not sure why, but adding Hibernate Validator
         brings in something that prevents my war file from being able
         to be deployed into TomEE.  

	 rluu_20150202: Okay, so interestingly, adding Hibernate JPA
	 dependency works fine, but adding the hibernate-core and
	 hibernate-validator (just these two) causes it to fail while
	 deploying.
    -->
    <!--
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate.validator.version}</version>
    </dependency>
    -->

    <!-- Hibernate JPA 
	 (includes:
	    - Hibernate Core.
	    - Hibernate Annotations
	    - Hibernate EntityManager
	    ) 
    -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate.entitymanager.version}</version>
    </dependency>


    <!-- PostgreSQL JDBC driver. -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>



    <!-- JSTL -->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>

    <!-- Twitter Bootstrap -->
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <version>${twitter.bootstrap.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.webjars</groupId>
          <artifactId>jquery</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <!-- JQuery -->
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
      <version>${jquery.version}</version>
    </dependency>


    <!-- I've commented this out because this is not needed, and it will pull in all kinds of sub-dependencies, which I don't want or need, and which will clash with other stuff in the classpath. 
    <dependency>
      <groupId>org.apache.openejb.maven</groupId>
      <artifactId>tomee-maven-plugin</artifactId>
      <version>${tomee.version}</version>
      <scope>provided</scope>
      <exclusions>
	<exclusion> 
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-jdk14</artifactId>
	</exclusion>
      </exclusions>
    </dependency>
    -->

    <!-- Add the Servlet API, provided by the container. 
	 JEE 7 has version 3.1.0; JEE 6 has version 3.0.0
    -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>todolist</finalName>

    <plugins>

      <!-- Eclipse project -->
      <!-- To create the eclipse project type on the command-line:
  	     mvn eclipse:eclipse
      -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-eclipse-plugin</artifactId>
	<version>2.9</version>
	<configuration>
	  <!-- Always download and attach dependencies source code -->
	  <downloadSources>true</downloadSources>
	  <downloadJavadocs>false</downloadJavadocs>
	  <!-- Avoid type mvn eclipse:eclipse -Dwtpversion=2.0 -->
	  <wtpversion>2.0</wtpversion>
	</configuration>
      </plugin>

      <!-- Specify that the source code is Java 8.  -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>2.3.2</version>
	<configuration>
	  <source>${jdk.version}</source>
	  <target>${jdk.version}</target>
	</configuration>
      </plugin>


      <!-- Maven TomEE plugin. -->
      <plugin>
	<groupId>org.apache.openejb.maven</groupId>
	<artifactId>tomee-maven-plugin</artifactId>
	<version>${tomee.version}</version>
	<configuration>
          <tomeeVersion>${tomee.version}</tomeeVersion>
          <tomeeClassifier>plus</tomeeClassifier>
	  
	  <synchronization>
	    <extensions>
              <extension>.class</extension>
	    </extensions>
	  </synchronization>
	  <reloadOnUpdate>true</reloadOnUpdate>

	</configuration>
      </plugin>

    </plugins>

  </build>

</project>
